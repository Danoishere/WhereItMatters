@model Donation
@{ 
    ViewData["Title"] = "Payment summary";
}
@section scriptstop{
    <!-- Load the Client component. -->
    <script src="https://js.braintreegateway.com/web/3.12.0/js/client.min.js"></script>
    <!-- Load the Hosted Fields component. -->
    <script src="https://js.braintreegateway.com/web/3.12.0/js/hosted-fields.min.js"></script>
}
<br />
<h1>Payment summary</h1>
<br />
<div class="row">
    <div class="col-sm-3">
        <label class="control-label">Amount</label>
    </div>
    <div class="col-sm-9">
        <h3>$@Model.AmountUSD</h3>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        <label class="control-label"></label>
    </div>
    <div class="col-sm-9">
        @ViewData["DonationPurpose"]
    </div>
</div>
<br />
<form id="payment-form" method="post" asp-action="ExecuteDonationPayment" asp-controller="Donation">
    <div class="row">
        <div class="col-sm-8">
            <div class="thumbnail">
                <div style="margin:20px">
                    <input type="hidden" name="amountusd" value="@Model.AmountUSD" />
                    <input type="hidden" name="comment" value="@Model.Comment" />
                    <input type="hidden" name="denysupportmoney" value="@Model.DenySupportMoney" />
                    <input type="hidden" name="donationrequestid" value="@Model.DonationRequestId" />
                    <input type="hidden" name="donationrequestid" value="@Model.MissionId" />
                    <input type="hidden" name="donationrequestid" value="@Model.OrganisationId" />
                    <input type="hidden" name="donoremail" value="@Model.DonorEmail" />
                    <input type="hidden" name="donorname" value="@Model.DonorName" />
                    <input type="hidden" name="showindonationlog" value="@Model.ShowInDonationLog.ToString()" />
                    <input type="hidden" name="timestamp" value="@Model.TimeStamp" />
                    <input type="hidden" name="payment_method_nonce" />

                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label class="control-label">Card Number</label>
                        </div>
                        <div class="col-sm-8">
                            <!--  Hosted Fields div container -->
                            <div class="form-control" id="card-number"></div>
                            <span class="helper-text"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label class="control-label">Expiration Date</label>
                        </div>
                        <div class="col-sm-4">
                            <!--  Hosted Fields div container -->
                            <div class="form-control" id="expiration-month"></div>
                        </div>
                        <div class="col-sm-4">
                            <!--  Hosted Fields div container -->
                            <div class="form-control" id="expiration-year"></div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label class="control-label">Security Code</label>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-control" id="cvv"></div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label class="control-label">Zipcode</label>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-control" id="postal-code"></div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label class="control-label">Cardholder name</label>
                        </div>
                        <div class="col-sm-4">
                            <input name="cardholder_firstname" type="text" class="form-control" placeholder="John" />
                        </div>
                        <div class="col-sm-4">
                            <input name="cardholder_lastname" type="text" class="form-control" placeholder="Doe" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br/>
    <div class="row">
        <div class="col-sm-3">

        </div>
        <div class="col-sm-9">
            <button type="submit" class="btn btn-success btn-lg">Pay with <span id="card-type">Card</span></button>
        </div>
    </div>
</form>

<script>
    // We generated a client token for you so you can test out this code
    // immediately. In a production-ready integration, you will need to
    // generate a client token on your server (see section below).

    var form = document.querySelector('#payment-form');
    var authorization = '@ViewData["BraintreeAuthorizationToken"]';

    braintree.client.create({
        authorization: authorization
    }, function (err, clientInstance) {
        if (err) {
            console.error(err);
            return;
        }

        braintree.hostedFields.create({
            client: clientInstance,
            styles: {
                'input': {
                    'font-size': '14px',
                    'font-family': 'helvetica, tahoma, calibri, sans-serif',
                    'color': '#3a3a3a'
                },
                ':focus': {
                    'color': 'black'
                }
            },
            fields: {
                number: {
                    selector: '#card-number',
                    placeholder: '4111 1111 1111 1111'
                },
                cvv: {
                    selector: '#cvv',
                    placeholder: '123'
                },
                expirationMonth: {
                    selector: '#expiration-month',
                    placeholder: 'MM'
                },
                expirationYear: {
                    selector: '#expiration-year',
                    placeholder: 'YY'
                },
                postalCode: {
                    selector: '#postal-code',
                    placeholder: '90210'
                }
            }
        }, function (err, hostedFieldsInstance) {
            if (err) {
                console.error(err);
                return;
            }

            hostedFieldsInstance.on('validityChange', function (event) {
                var field = event.fields[event.emittedBy];

                if (field.isValid) {
                    if (event.emittedBy === 'expirationMonth' || event.emittedBy === 'expirationYear') {
                        if (!event.fields.expirationMonth.isValid || !event.fields.expirationYear.isValid) {
                            return;
                        }
                    } else if (event.emittedBy === 'number') {
                        $('#card-number').next('span').text('');
                    }

                    // Apply styling for a valid field
                    $(field.container).parents('.form-group').addClass('has-success');
                } else if (field.isPotentiallyValid) {
                    // Remove styling  from potentially valid fields
                    $(field.container).parents('.form-group').removeClass('has-warning');
                    $(field.container).parents('.form-group').removeClass('has-success');
                    if (event.emittedBy === 'number') {
                        $('#card-number').next('span').text('');
                    }
                } else {
                    // Add styling to invalid fields
                    $(field.container).parents('.form-group').addClass('has-warning');
                    // Add helper text for an invalid card number
                    if (event.emittedBy === 'number') {
                        $('#card-number').next('span').text('Looks like this card number has an error.');
                    }
                }
            });

            hostedFieldsInstance.on('cardTypeChange', function (event) {
                // Handle a field's change, such as a change in validity or credit card type
                if (event.cards.length === 1) {
                    $('#card-type').text(event.cards[0].niceType);
                } else {
                    $('#card-type').text('Card');
                }
            });

            form.addEventListener('submit', function (event) {
                event.preventDefault();

                hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
                    if (tokenizeErr) {
                        // Handle error in Hosted Fields tokenization
                        return;
                    }

                    document.querySelector('input[name="payment_method_nonce"]').value = payload.nonce;
                    form.submit();
                });
            });
        });
    });
</script>
